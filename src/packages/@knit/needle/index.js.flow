/* @flow */

export type TJson = {
  [k: string]: mixed
};

export type TPkgJsonDeps = {
  [k: string]: string
};

export type TSubPkgJson = {
  name: string,
  description?: string,
  browser?: boolean,
  private?: boolean,
  version: string
};

export type TAuthor = {
  name: string,
  email?: string,
  url?: string
};

export type TPkgJson = {
  name: string,
  repository: string,
  description?: string,
  private?: boolean,
  build?: boolean,
  version: string,
  engines?: {
    node?: string,
    npm?: string
  },
  os: string,
  cpu: string,
  preferGlobal: boolean,
  bundledDependencies: TPkgJsonDeps,
  author?: TAuthor,
  contributors?: Array<TAuthor>,
  homepage?: string,
  license?: string,
  bugs?: {
    url: string,
    email?: string
  },
  files?: Array<string>,
  tags?: Array<string>,
  keywords?: Array<string>,
  dependencies: TPkgJsonDeps,
  devDependencies: TPkgJsonDeps,
  peerDependencies: TPkgJsonDeps,
  optionalDependencies: TPkgJsonDeps,
  scripts?: { string?: string }
};

export type TPaths = {|
  rootDir: string,
  outputDirPath: string,
  outputDir: string,
  workingDirPath: string,
  workingDir: string
|};

export type TNeedle = {|
  paths: TPaths,
  pkg: TPkgJson
|};

declare module.exports: TNeedle;
