/* @flow */

import webpack from 'webpack';
import merge from 'webpack-merge';

import needle from '@knit/needle';

import type { TConfig } from '@knit/webpack-config-socks';

import webpackConfig from './_base';

const devServer = {
  contentBase: needle.paths.rootDir,
  stats: {
    colors: true,
    hash: false,
    timings: true,
    chunks: false,
    chunkModules: false,
    modules: false,
  },
  publicPath: (webpackConfig.output || {}).publicPath || '',
};

const newConfig: TConfig = {
  entry: {
    // need to empty it first because webpack-merge will add them in the wrong order
    bundle: [
      'react-hot-loader/patch',
      'webpack-hot-middleware/client?reload=true',
    ],
  },
  plugins: [
    new webpack.HotModuleReplacementPlugin(),
  ],
  devServer,
};

const devWebpackConfig: TConfig = merge.strategy(
  { 'entry.bundle': 'prepend' }
)(webpackConfig, newConfig);

export default devWebpackConfig;
