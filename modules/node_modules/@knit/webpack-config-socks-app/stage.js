/* @flow */

import path from 'path';
import webpack from 'webpack';
import merge from 'webpack-merge';
import HtmlWebpackPlugin from 'html-webpack-plugin';

import needle from '@knit/needle';
import HtmlRemove from '@knit/html-remove-webpack-plugin';

import type { TConfig } from '@knit/webpack-config-socks';

import webpackConfig from './_base';

const LIBS_BUNDLE = 'libs';

const newConfig: TConfig = {
  entry: {
    [LIBS_BUNDLE]: Object.keys(needle.pkg.dependencies || {}),
  },
  output: {
    filename: '[name].[hash].js',
    chunkFilename: '[id].js',
  },
  plugins: [
    new webpack.optimize.CommonsChunkPlugin(LIBS_BUNDLE),
    new webpack.optimize.AggressiveMergingPlugin(),
    new HtmlWebpackPlugin({
      template: path.join(needle.paths.entry, 'index.html'),
      filename: '../index.html',
      inject: 'body',
      minify: {
        collapseWhitespace: true,
      },
    }),
    new HtmlRemove(),
  ],
};

const stageWebpackConfig: TConfig = merge(
  webpackConfig,
  newConfig
);

export default stageWebpackConfig;
