/* flow */

import findUnpublishedPackages from '..';


jest.mock('@knit/yarn-utils', () => ({
  info: jest.fn((module) => (
    new Promise(resolve => resolve({
      name: module,
      versions: ['1.0.0', '1.2.0', '3.0.0'],
    }))
  )),
}));

jest.mock('@knit/read-pkg', () => (
  jest.fn((module) => {
    const mods = {
      moduleA: {
        name: 'moduleA',
        version: '1.0.0',
      },
      moduleB: {
        name: 'moduleB',
        version: '1.5.1',
      },
    };

    return mods[module];
  })
)
);


describe('findUnpublishedPackages', () => {
  it('finds module name', async () => {
    const re = await findUnpublishedPackages(['moduleA', 'moduleB']);
    expect(re).toEqual(['moduleB']);
  });
});
