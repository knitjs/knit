/* @flow */

import webpack from 'webpack';
import CaseSensitivePathsPlugin from 'case-sensitive-paths-webpack-plugin';

import needle from '@knit/needle';

import type { TConfig } from './';

const webpackConfig: TConfig = {
  devtool: '#source-map',
  module: {
    rules: [
      {
        test: /\.js$/,
        loader: 'babel-loader',
        include: needle.paths.modules,
      },
      {
        test: /\.css$/,
        use: [
          'style-loader',
          'css-loader',
        ],
      },
      {
        test: /\.(ico|jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2)(\?.*)?$/,
        loader: 'file-loader',
        options: {
          name: '[name].[hash:8].[ext]',
        },
      },
      {
        test: /\.(mp4|webm|wav|mp3|m4a|aac|oga)(\?.*)?$/,
        loader: 'url-loader',
        options: {
          limit: 10000,
          name: '[name].[hash:8].[ext]',
        },
      },
    ],
    noParse: [/\.min\.js$/],
  },
  resolve: {
    mainFields: process.env.JS_NEXT ? ['module', 'jsnext:main', 'main'] : ['main'],
  },
  plugins: [
    new webpack.DefinePlugin(needle.env),
    new CaseSensitivePathsPlugin(),
  ],
};

export default webpackConfig;
