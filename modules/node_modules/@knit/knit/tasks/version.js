/* @flow */

import type { TModules } from '@knit/knit-core';
import type { TPkgJson } from '@knit/needle';

import yarn from '@knit/yarn-utils';

const execa = require('execa');
const writePkg = require('write-pkg');
const rx = require('@reactivex/rxjs');

const knit = require('@knit/knit-core');
const needle = require('@knit/needle');

type TCtx = {
  modules: TModules,
  pkgs: {[k: string]: TPkgJson},
  updated: TModules,
  version: string,
};

const tasks = [
  {
    title: 'bumping version of updated modules',
    task: (ctx: TCtx) => rx.Observable.create(observer => {
      ctx.updated.forEach(m => {
        observer.next(m);
        const pkg = Object.assign({}, ctx.pkgs[m], {
          version: ctx.version,
        });
        ctx.pkgs[m] = pkg;
        writePkg.sync(
          knit.pathJoin(needle.paths.modules, m),
          pkg
        );
      });
      observer.complete();
    }),
  },
  {
    title: 'committing changes',
    task: () => execa('git', ['add', '.']),
  },
  {
    title: 'bumping package version',
    task: (ctx: TCtx) => yarn.version(ctx.version),
  },
];

module.exports = tasks;
