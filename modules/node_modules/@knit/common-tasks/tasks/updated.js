/* @flow weak */

const execa = require('execa');

const knit = require('@knit/knit-core');
const needle = require('@knit/needle');

const tasks = [
  {
    title: 'getting last tag',
    skip: ctx => ctx.tag || ctx.forceAll,
    task: ctx => execa.stdout('git', ['describe', '--abbrev=0', '--tags']).then(tag => {
      ctx.tag = tag;
    }).catch(() => execa.stdout('git', ['rev-list', '--max-parents=0', 'HEAD']).then(commit => {
      ctx.tag = commit;
    })).catch(() => {
      ctx.tag = null;
    }),
  },
  {
    title: 'determining updated modules since last release',
    skip: ctx => ctx.updated && `${ctx.updated.length} modules already found.`,
    task: ctx => {
      if (ctx.tag) {
        return knit.findUpdatedModules(ctx.modules, ctx.tag, needle.paths).then(updated => {
          ctx.updated = updated;
        });
      }
      ctx.updated = ctx.modules;
      return ctx;
    },
  },
];

module.exports = tasks;
