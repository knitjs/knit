name: Prerelease

on:
  pull_request:

env:
  KNIT_WORKING_DIR: src/packages

jobs:
  action-test:
    name: Action Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Action Step
        uses: knitjs/actions/pre-release@init-pre-release

  flow:
    name: Typecheck
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [10]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn problems

  lint:
    name: Linter
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [10]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn lint

  validate:
    name: Validate
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node: [10]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn validate

  test:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        node: [10]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn install
      - run: yarn test

  publish-npr:
    name: Publish NPR
    needs: [flow, lint, validate, test]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js 10
        uses: actions/setup-node@v1
        with:
          node-version: 10
          registry-url: https://registry.npmjs.org/
          always-auth: true
      - name: Prepare repository
        run: |
          git checkout master
          git checkout "${GITHUB_HEAD_REF}"
      - run: yarn install
      - name: Set to latest released version
        run: yarn nps version
      - name: Bump prerelease version
        run: yarn nps prerelease
      - name: Build
        run: yarn build
      # - name: Publish prerelease to registry
      #   run: yarn nps "publish --tag GIT_BRANCH --access public --registry https://registry.npmjs.org/"
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Danger
        run: yarn danger ci
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}